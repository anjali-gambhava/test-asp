#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace exam
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="electionflc")]
	public partial class dataclsDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadminlogin(adminlogin instance);
    partial void Updateadminlogin(adminlogin instance);
    partial void Deleteadminlogin(adminlogin instance);
    partial void Insertstreamlist(streamlist instance);
    partial void Updatestreamlist(streamlist instance);
    partial void Deletestreamlist(streamlist instance);
    partial void Insertstreamstatus(streamstatus instance);
    partial void Updatestreamstatus(streamstatus instance);
    partial void Deletestreamstatus(streamstatus instance);
    partial void Insertoperator_info(operator_info instance);
    partial void Updateoperator_info(operator_info instance);
    partial void Deleteoperator_info(operator_info instance);
    partial void Insertdistrict(district instance);
    partial void Updatedistrict(district instance);
    partial void Deletedistrict(district instance);
    partial void Insertstate(state instance);
    partial void Updatestate(state instance);
    partial void Deletestate(state instance);
    partial void Insertstatic_count(static_count instance);
    partial void Updatestatic_count(static_count instance);
    partial void Deletestatic_count(static_count instance);
    partial void Insertuser(user instance);
    partial void Updateuser(user instance);
    partial void Deleteuser(user instance);
    partial void Insertstreamstatustest(streamstatustest instance);
    partial void Updatestreamstatustest(streamstatustest instance);
    partial void Deletestreamstatustest(streamstatustest instance);
    partial void Insertbooth(booth instance);
    partial void Updatebooth(booth instance);
    partial void Deletebooth(booth instance);
    #endregion
		
		public dataclsDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["connectionstr"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dataclsDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataclsDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataclsDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dataclsDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<adminlogin> adminlogins
		{
			get
			{
				return this.GetTable<adminlogin>();
			}
		}
		
		public System.Data.Linq.Table<streamlist> streamlists
		{
			get
			{
				return this.GetTable<streamlist>();
			}
		}
		
		public System.Data.Linq.Table<streamstatus> streamstatus
		{
			get
			{
				return this.GetTable<streamstatus>();
			}
		}
		
		public System.Data.Linq.Table<operator_info> operator_infos
		{
			get
			{
				return this.GetTable<operator_info>();
			}
		}
		
		public System.Data.Linq.Table<district> districts
		{
			get
			{
				return this.GetTable<district>();
			}
		}
		
		public System.Data.Linq.Table<state> states
		{
			get
			{
				return this.GetTable<state>();
			}
		}
		
		public System.Data.Linq.Table<static_count> static_counts
		{
			get
			{
				return this.GetTable<static_count>();
			}
		}
		
		public System.Data.Linq.Table<user> users
		{
			get
			{
				return this.GetTable<user>();
			}
		}
		
		public System.Data.Linq.Table<streamstatustest> streamstatustests
		{
			get
			{
				return this.GetTable<streamstatustest>();
			}
		}
		
		public System.Data.Linq.Table<booth> booths
		{
			get
			{
				return this.GetTable<booth>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.adminlogin")]
	public partial class adminlogin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _admin_user;
		
		private string _admin_pwd;
		
		private System.Nullable<bool> _isenable;
		
		private System.Nullable<int> _identifier;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void Onadmin_userChanging(string value);
    partial void Onadmin_userChanged();
    partial void Onadmin_pwdChanging(string value);
    partial void Onadmin_pwdChanged();
    partial void OnisenableChanging(System.Nullable<bool> value);
    partial void OnisenableChanged();
    partial void OnidentifierChanging(System.Nullable<int> value);
    partial void OnidentifierChanged();
    #endregion
		
		public adminlogin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_user", DbType="NVarChar(50)")]
		public string admin_user
		{
			get
			{
				return this._admin_user;
			}
			set
			{
				if ((this._admin_user != value))
				{
					this.Onadmin_userChanging(value);
					this.SendPropertyChanging();
					this._admin_user = value;
					this.SendPropertyChanged("admin_user");
					this.Onadmin_userChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_pwd", DbType="NVarChar(50)")]
		public string admin_pwd
		{
			get
			{
				return this._admin_pwd;
			}
			set
			{
				if ((this._admin_pwd != value))
				{
					this.Onadmin_pwdChanging(value);
					this.SendPropertyChanging();
					this._admin_pwd = value;
					this.SendPropertyChanged("admin_pwd");
					this.Onadmin_pwdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isenable", DbType="Bit")]
		public System.Nullable<bool> isenable
		{
			get
			{
				return this._isenable;
			}
			set
			{
				if ((this._isenable != value))
				{
					this.OnisenableChanging(value);
					this.SendPropertyChanging();
					this._isenable = value;
					this.SendPropertyChanged("isenable");
					this.OnisenableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identifier", DbType="Int")]
		public System.Nullable<int> identifier
		{
			get
			{
				return this._identifier;
			}
			set
			{
				if ((this._identifier != value))
				{
					this.OnidentifierChanging(value);
					this.SendPropertyChanging();
					this._identifier = value;
					this.SendPropertyChanged("identifier");
					this.OnidentifierChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.streamlist")]
	public partial class streamlist : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _prourl;
		
		private string _deviceid;
		
		private string _streamname;
		
		private string _servername;
		
		private System.Nullable<int> _schoolid;
		
		private string _status;
		
		private System.Nullable<int> _stateID;
		
		private bool _IsEnable;
		
		private System.Nullable<bool> _isLive;
		
		private bool _hasalarm;
		
		private System.Nullable<System.DateTime> _lastseen;
		
		private System.Nullable<bool> _stop;
		
		private System.Nullable<bool> _isdownload;
		
		private System.Nullable<bool> _isvod;
		
		private System.Nullable<bool> _selected;
		
		private System.Nullable<int> _statusFlag;
		
		private string _streamnamebkp;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnprourlChanging(string value);
    partial void OnprourlChanged();
    partial void OndeviceidChanging(string value);
    partial void OndeviceidChanged();
    partial void OnstreamnameChanging(string value);
    partial void OnstreamnameChanged();
    partial void OnservernameChanging(string value);
    partial void OnservernameChanged();
    partial void OnschoolidChanging(System.Nullable<int> value);
    partial void OnschoolidChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    partial void OnstateIDChanging(System.Nullable<int> value);
    partial void OnstateIDChanged();
    partial void OnIsEnableChanging(bool value);
    partial void OnIsEnableChanged();
    partial void OnisLiveChanging(System.Nullable<bool> value);
    partial void OnisLiveChanged();
    partial void OnhasalarmChanging(bool value);
    partial void OnhasalarmChanged();
    partial void OnlastseenChanging(System.Nullable<System.DateTime> value);
    partial void OnlastseenChanged();
    partial void OnstopChanging(System.Nullable<bool> value);
    partial void OnstopChanged();
    partial void OnisdownloadChanging(System.Nullable<bool> value);
    partial void OnisdownloadChanged();
    partial void OnisvodChanging(System.Nullable<bool> value);
    partial void OnisvodChanged();
    partial void OnselectedChanging(System.Nullable<bool> value);
    partial void OnselectedChanged();
    partial void OnstatusFlagChanging(System.Nullable<int> value);
    partial void OnstatusFlagChanged();
    partial void OnstreamnamebkpChanging(string value);
    partial void OnstreamnamebkpChanged();
    #endregion
		
		public streamlist()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prourl", DbType="NVarChar(50)")]
		public string prourl
		{
			get
			{
				return this._prourl;
			}
			set
			{
				if ((this._prourl != value))
				{
					this.OnprourlChanging(value);
					this.SendPropertyChanging();
					this._prourl = value;
					this.SendPropertyChanged("prourl");
					this.OnprourlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceid", DbType="NVarChar(50)")]
		public string deviceid
		{
			get
			{
				return this._deviceid;
			}
			set
			{
				if ((this._deviceid != value))
				{
					this.OndeviceidChanging(value);
					this.SendPropertyChanging();
					this._deviceid = value;
					this.SendPropertyChanged("deviceid");
					this.OndeviceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamname", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string streamname
		{
			get
			{
				return this._streamname;
			}
			set
			{
				if ((this._streamname != value))
				{
					this.OnstreamnameChanging(value);
					this.SendPropertyChanging();
					this._streamname = value;
					this.SendPropertyChanged("streamname");
					this.OnstreamnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_servername", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string servername
		{
			get
			{
				return this._servername;
			}
			set
			{
				if ((this._servername != value))
				{
					this.OnservernameChanging(value);
					this.SendPropertyChanging();
					this._servername = value;
					this.SendPropertyChanged("servername");
					this.OnservernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolid", DbType="Int")]
		public System.Nullable<int> schoolid
		{
			get
			{
				return this._schoolid;
			}
			set
			{
				if ((this._schoolid != value))
				{
					this.OnschoolidChanging(value);
					this.SendPropertyChanging();
					this._schoolid = value;
					this.SendPropertyChanged("schoolid");
					this.OnschoolidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int")]
		public System.Nullable<int> stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isLive", DbType="Bit")]
		public System.Nullable<bool> isLive
		{
			get
			{
				return this._isLive;
			}
			set
			{
				if ((this._isLive != value))
				{
					this.OnisLiveChanging(value);
					this.SendPropertyChanging();
					this._isLive = value;
					this.SendPropertyChanged("isLive");
					this.OnisLiveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hasalarm", DbType="Bit NOT NULL")]
		public bool hasalarm
		{
			get
			{
				return this._hasalarm;
			}
			set
			{
				if ((this._hasalarm != value))
				{
					this.OnhasalarmChanging(value);
					this.SendPropertyChanging();
					this._hasalarm = value;
					this.SendPropertyChanged("hasalarm");
					this.OnhasalarmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastseen", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastseen
		{
			get
			{
				return this._lastseen;
			}
			set
			{
				if ((this._lastseen != value))
				{
					this.OnlastseenChanging(value);
					this.SendPropertyChanging();
					this._lastseen = value;
					this.SendPropertyChanged("lastseen");
					this.OnlastseenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stop", DbType="Bit")]
		public System.Nullable<bool> stop
		{
			get
			{
				return this._stop;
			}
			set
			{
				if ((this._stop != value))
				{
					this.OnstopChanging(value);
					this.SendPropertyChanging();
					this._stop = value;
					this.SendPropertyChanged("stop");
					this.OnstopChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isdownload", DbType="Bit")]
		public System.Nullable<bool> isdownload
		{
			get
			{
				return this._isdownload;
			}
			set
			{
				if ((this._isdownload != value))
				{
					this.OnisdownloadChanging(value);
					this.SendPropertyChanging();
					this._isdownload = value;
					this.SendPropertyChanged("isdownload");
					this.OnisdownloadChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isvod", DbType="Bit")]
		public System.Nullable<bool> isvod
		{
			get
			{
				return this._isvod;
			}
			set
			{
				if ((this._isvod != value))
				{
					this.OnisvodChanging(value);
					this.SendPropertyChanging();
					this._isvod = value;
					this.SendPropertyChanged("isvod");
					this.OnisvodChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selected", DbType="Bit")]
		public System.Nullable<bool> selected
		{
			get
			{
				return this._selected;
			}
			set
			{
				if ((this._selected != value))
				{
					this.OnselectedChanging(value);
					this.SendPropertyChanging();
					this._selected = value;
					this.SendPropertyChanged("selected");
					this.OnselectedChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statusFlag", DbType="Int")]
		public System.Nullable<int> statusFlag
		{
			get
			{
				return this._statusFlag;
			}
			set
			{
				if ((this._statusFlag != value))
				{
					this.OnstatusFlagChanging(value);
					this.SendPropertyChanging();
					this._statusFlag = value;
					this.SendPropertyChanged("statusFlag");
					this.OnstatusFlagChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamnamebkp", DbType="NVarChar(50)")]
		public string streamnamebkp
		{
			get
			{
				return this._streamnamebkp;
			}
			set
			{
				if ((this._streamnamebkp != value))
				{
					this.OnstreamnamebkpChanging(value);
					this.SendPropertyChanging();
					this._streamnamebkp = value;
					this.SendPropertyChanged("streamnamebkp");
					this.OnstreamnamebkpChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.streamstatus")]
	public partial class streamstatus : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _streamid;
		
		private string _streamname;
		
		private string _deviceid;
		
		private System.Nullable<System.DateTime> _statustime;
		
		private System.Nullable<bool> _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstreamidChanging(System.Nullable<int> value);
    partial void OnstreamidChanged();
    partial void OnstreamnameChanging(string value);
    partial void OnstreamnameChanged();
    partial void OndeviceidChanging(string value);
    partial void OndeviceidChanged();
    partial void OnstatustimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstatustimeChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public streamstatus()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamid", DbType="Int")]
		public System.Nullable<int> streamid
		{
			get
			{
				return this._streamid;
			}
			set
			{
				if ((this._streamid != value))
				{
					this.OnstreamidChanging(value);
					this.SendPropertyChanging();
					this._streamid = value;
					this.SendPropertyChanged("streamid");
					this.OnstreamidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamname", DbType="NVarChar(50)")]
		public string streamname
		{
			get
			{
				return this._streamname;
			}
			set
			{
				if ((this._streamname != value))
				{
					this.OnstreamnameChanging(value);
					this.SendPropertyChanging();
					this._streamname = value;
					this.SendPropertyChanged("streamname");
					this.OnstreamnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceid", DbType="NVarChar(50)")]
		public string deviceid
		{
			get
			{
				return this._deviceid;
			}
			set
			{
				if ((this._deviceid != value))
				{
					this.OndeviceidChanging(value);
					this.SendPropertyChanging();
					this._deviceid = value;
					this.SendPropertyChanged("deviceid");
					this.OndeviceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statustime", DbType="DateTime")]
		public System.Nullable<System.DateTime> statustime
		{
			get
			{
				return this._statustime;
			}
			set
			{
				if ((this._statustime != value))
				{
					this.OnstatustimeChanging(value);
					this.SendPropertyChanging();
					this._statustime = value;
					this.SendPropertyChanged("statustime");
					this.OnstatustimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.operator_info")]
	public partial class operator_info : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _operatorName;
		
		private System.Nullable<decimal> _operatorNumber;
		
		private System.Nullable<decimal> _operatorAltNumber;
		
		private string _district;
		
		private System.Nullable<int> _stateid;
		
		private string _operatorName_alt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnoperatorNameChanging(string value);
    partial void OnoperatorNameChanged();
    partial void OnoperatorNumberChanging(System.Nullable<decimal> value);
    partial void OnoperatorNumberChanged();
    partial void OnoperatorAltNumberChanging(System.Nullable<decimal> value);
    partial void OnoperatorAltNumberChanged();
    partial void OndistrictChanging(string value);
    partial void OndistrictChanged();
    partial void OnstateidChanging(System.Nullable<int> value);
    partial void OnstateidChanged();
    partial void OnoperatorName_altChanging(string value);
    partial void OnoperatorName_altChanged();
    #endregion
		
		public operator_info()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorName", DbType="NVarChar(100)")]
		public string operatorName
		{
			get
			{
				return this._operatorName;
			}
			set
			{
				if ((this._operatorName != value))
				{
					this.OnoperatorNameChanging(value);
					this.SendPropertyChanging();
					this._operatorName = value;
					this.SendPropertyChanged("operatorName");
					this.OnoperatorNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorNumber", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> operatorNumber
		{
			get
			{
				return this._operatorNumber;
			}
			set
			{
				if ((this._operatorNumber != value))
				{
					this.OnoperatorNumberChanging(value);
					this.SendPropertyChanging();
					this._operatorNumber = value;
					this.SendPropertyChanged("operatorNumber");
					this.OnoperatorNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorAltNumber", DbType="Decimal(10,0)")]
		public System.Nullable<decimal> operatorAltNumber
		{
			get
			{
				return this._operatorAltNumber;
			}
			set
			{
				if ((this._operatorAltNumber != value))
				{
					this.OnoperatorAltNumberChanging(value);
					this.SendPropertyChanging();
					this._operatorAltNumber = value;
					this.SendPropertyChanged("operatorAltNumber");
					this.OnoperatorAltNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district", DbType="NVarChar(MAX)")]
		public string district
		{
			get
			{
				return this._district;
			}
			set
			{
				if ((this._district != value))
				{
					this.OndistrictChanging(value);
					this.SendPropertyChanging();
					this._district = value;
					this.SendPropertyChanged("district");
					this.OndistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", DbType="Int")]
		public System.Nullable<int> stateid
		{
			get
			{
				return this._stateid;
			}
			set
			{
				if ((this._stateid != value))
				{
					this.OnstateidChanging(value);
					this.SendPropertyChanging();
					this._stateid = value;
					this.SendPropertyChanged("stateid");
					this.OnstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorName_alt", DbType="NVarChar(MAX)")]
		public string operatorName_alt
		{
			get
			{
				return this._operatorName_alt;
			}
			set
			{
				if ((this._operatorName_alt != value))
				{
					this.OnoperatorName_altChanging(value);
					this.SendPropertyChanging();
					this._operatorName_alt = value;
					this.SendPropertyChanged("operatorName_alt");
					this.OnoperatorName_altChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.district")]
	public partial class district : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _stateid;
		
		private string _district1;
		
		private string _accode;
		
		private string _acname;
		
		private System.Nullable<bool> _isenable;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstateidChanging(System.Nullable<int> value);
    partial void OnstateidChanged();
    partial void Ondistrict1Changing(string value);
    partial void Ondistrict1Changed();
    partial void OnaccodeChanging(string value);
    partial void OnaccodeChanged();
    partial void OnacnameChanging(string value);
    partial void OnacnameChanged();
    partial void OnisenableChanging(System.Nullable<bool> value);
    partial void OnisenableChanged();
    #endregion
		
		public district()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateid", DbType="Int")]
		public System.Nullable<int> stateid
		{
			get
			{
				return this._stateid;
			}
			set
			{
				if ((this._stateid != value))
				{
					this.OnstateidChanging(value);
					this.SendPropertyChanging();
					this._stateid = value;
					this.SendPropertyChanged("stateid");
					this.OnstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="district", Storage="_district1", DbType="NVarChar(MAX)")]
		public string district1
		{
			get
			{
				return this._district1;
			}
			set
			{
				if ((this._district1 != value))
				{
					this.Ondistrict1Changing(value);
					this.SendPropertyChanging();
					this._district1 = value;
					this.SendPropertyChanged("district1");
					this.Ondistrict1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accode", DbType="NVarChar(MAX)")]
		public string accode
		{
			get
			{
				return this._accode;
			}
			set
			{
				if ((this._accode != value))
				{
					this.OnaccodeChanging(value);
					this.SendPropertyChanging();
					this._accode = value;
					this.SendPropertyChanged("accode");
					this.OnaccodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acname", DbType="NVarChar(MAX)")]
		public string acname
		{
			get
			{
				return this._acname;
			}
			set
			{
				if ((this._acname != value))
				{
					this.OnacnameChanging(value);
					this.SendPropertyChanging();
					this._acname = value;
					this.SendPropertyChanged("acname");
					this.OnacnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isenable", DbType="Bit")]
		public System.Nullable<bool> isenable
		{
			get
			{
				return this._isenable;
			}
			set
			{
				if ((this._isenable != value))
				{
					this.OnisenableChanging(value);
					this.SendPropertyChanging();
					this._isenable = value;
					this.SendPropertyChanged("isenable");
					this.OnisenableChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.state")]
	public partial class state : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _statename;
		
		private System.Nullable<bool> _isdisplay;
		
		private string _stcode;
		
		private System.Nullable<bool> _dashboard;
		
		private System.Nullable<int> _mincount;
		
		private EntitySet<user> _users;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstatenameChanging(string value);
    partial void OnstatenameChanged();
    partial void OnisdisplayChanging(System.Nullable<bool> value);
    partial void OnisdisplayChanged();
    partial void OnstcodeChanging(string value);
    partial void OnstcodeChanged();
    partial void OndashboardChanging(System.Nullable<bool> value);
    partial void OndashboardChanged();
    partial void OnmincountChanging(System.Nullable<int> value);
    partial void OnmincountChanged();
    #endregion
		
		public state()
		{
			this._users = new EntitySet<user>(new Action<user>(this.attach_users), new Action<user>(this.detach_users));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statename", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string statename
		{
			get
			{
				return this._statename;
			}
			set
			{
				if ((this._statename != value))
				{
					this.OnstatenameChanging(value);
					this.SendPropertyChanging();
					this._statename = value;
					this.SendPropertyChanged("statename");
					this.OnstatenameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isdisplay", DbType="Bit")]
		public System.Nullable<bool> isdisplay
		{
			get
			{
				return this._isdisplay;
			}
			set
			{
				if ((this._isdisplay != value))
				{
					this.OnisdisplayChanging(value);
					this.SendPropertyChanging();
					this._isdisplay = value;
					this.SendPropertyChanged("isdisplay");
					this.OnisdisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stcode", DbType="NVarChar(50)")]
		public string stcode
		{
			get
			{
				return this._stcode;
			}
			set
			{
				if ((this._stcode != value))
				{
					this.OnstcodeChanging(value);
					this.SendPropertyChanging();
					this._stcode = value;
					this.SendPropertyChanged("stcode");
					this.OnstcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dashboard", DbType="Bit")]
		public System.Nullable<bool> dashboard
		{
			get
			{
				return this._dashboard;
			}
			set
			{
				if ((this._dashboard != value))
				{
					this.OndashboardChanging(value);
					this.SendPropertyChanging();
					this._dashboard = value;
					this.SendPropertyChanged("dashboard");
					this.OndashboardChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mincount", DbType="Int")]
		public System.Nullable<int> mincount
		{
			get
			{
				return this._mincount;
			}
			set
			{
				if ((this._mincount != value))
				{
					this.OnmincountChanging(value);
					this.SendPropertyChanging();
					this._mincount = value;
					this.SendPropertyChanged("mincount");
					this.OnmincountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_user", Storage="_users", ThisKey="id", OtherKey="stateID")]
		public EntitySet<user> users
		{
			get
			{
				return this._users;
			}
			set
			{
				this._users.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.state = this;
		}
		
		private void detach_users(user entity)
		{
			this.SendPropertyChanging();
			entity.state = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.static_count")]
	public partial class static_count : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _staticcount;
		
		private System.Nullable<bool> _isenable;
		
		private string _dist_name;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstaticcountChanging(System.Nullable<int> value);
    partial void OnstaticcountChanged();
    partial void OnisenableChanging(System.Nullable<bool> value);
    partial void OnisenableChanged();
    partial void Ondist_nameChanging(string value);
    partial void Ondist_nameChanged();
    #endregion
		
		public static_count()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_staticcount", DbType="Int")]
		public System.Nullable<int> staticcount
		{
			get
			{
				return this._staticcount;
			}
			set
			{
				if ((this._staticcount != value))
				{
					this.OnstaticcountChanging(value);
					this.SendPropertyChanging();
					this._staticcount = value;
					this.SendPropertyChanged("staticcount");
					this.OnstaticcountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isenable", DbType="Bit")]
		public System.Nullable<bool> isenable
		{
			get
			{
				return this._isenable;
			}
			set
			{
				if ((this._isenable != value))
				{
					this.OnisenableChanging(value);
					this.SendPropertyChanging();
					this._isenable = value;
					this.SendPropertyChanged("isenable");
					this.OnisenableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dist_name", DbType="NVarChar(100)")]
		public string dist_name
		{
			get
			{
				return this._dist_name;
			}
			set
			{
				if ((this._dist_name != value))
				{
					this.Ondist_nameChanging(value);
					this.SendPropertyChanging();
					this._dist_name = value;
					this.SendPropertyChanged("dist_name");
					this.Ondist_nameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.users")]
	public partial class user : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _username;
		
		private string _password;
		
		private string _usercode;
		
		private System.Nullable<int> _identifier;
		
		private bool _IsEnable;
		
		private System.Nullable<bool> _isDvr;
		
		private System.Nullable<int> _stateID;
		
		private System.Nullable<bool> _islogin;
		
		private System.Nullable<bool> _chklogin;
		
		private System.Nullable<int> _logincount;
		
		private System.Nullable<bool> _logincountenable;
		
		private EntityRef<state> _state;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnusercodeChanging(string value);
    partial void OnusercodeChanged();
    partial void OnidentifierChanging(System.Nullable<int> value);
    partial void OnidentifierChanged();
    partial void OnIsEnableChanging(bool value);
    partial void OnIsEnableChanged();
    partial void OnisDvrChanging(System.Nullable<bool> value);
    partial void OnisDvrChanged();
    partial void OnstateIDChanging(System.Nullable<int> value);
    partial void OnstateIDChanged();
    partial void OnisloginChanging(System.Nullable<bool> value);
    partial void OnisloginChanged();
    partial void OnchkloginChanging(System.Nullable<bool> value);
    partial void OnchkloginChanged();
    partial void OnlogincountChanging(System.Nullable<int> value);
    partial void OnlogincountChanged();
    partial void OnlogincountenableChanging(System.Nullable<bool> value);
    partial void OnlogincountenableChanged();
    #endregion
		
		public user()
		{
			this._state = default(EntityRef<state>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_usercode", DbType="NVarChar(MAX)")]
		public string usercode
		{
			get
			{
				return this._usercode;
			}
			set
			{
				if ((this._usercode != value))
				{
					this.OnusercodeChanging(value);
					this.SendPropertyChanging();
					this._usercode = value;
					this.SendPropertyChanged("usercode");
					this.OnusercodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_identifier", DbType="Int")]
		public System.Nullable<int> identifier
		{
			get
			{
				return this._identifier;
			}
			set
			{
				if ((this._identifier != value))
				{
					this.OnidentifierChanging(value);
					this.SendPropertyChanging();
					this._identifier = value;
					this.SendPropertyChanged("identifier");
					this.OnidentifierChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IsEnable", DbType="Bit NOT NULL")]
		public bool IsEnable
		{
			get
			{
				return this._IsEnable;
			}
			set
			{
				if ((this._IsEnable != value))
				{
					this.OnIsEnableChanging(value);
					this.SendPropertyChanging();
					this._IsEnable = value;
					this.SendPropertyChanged("IsEnable");
					this.OnIsEnableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isDvr", DbType="Bit")]
		public System.Nullable<bool> isDvr
		{
			get
			{
				return this._isDvr;
			}
			set
			{
				if ((this._isDvr != value))
				{
					this.OnisDvrChanging(value);
					this.SendPropertyChanging();
					this._isDvr = value;
					this.SendPropertyChanged("isDvr");
					this.OnisDvrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stateID", DbType="Int")]
		public System.Nullable<int> stateID
		{
			get
			{
				return this._stateID;
			}
			set
			{
				if ((this._stateID != value))
				{
					if (this._state.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnstateIDChanging(value);
					this.SendPropertyChanging();
					this._stateID = value;
					this.SendPropertyChanged("stateID");
					this.OnstateIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_islogin", DbType="Bit")]
		public System.Nullable<bool> islogin
		{
			get
			{
				return this._islogin;
			}
			set
			{
				if ((this._islogin != value))
				{
					this.OnisloginChanging(value);
					this.SendPropertyChanging();
					this._islogin = value;
					this.SendPropertyChanged("islogin");
					this.OnisloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_chklogin", DbType="Bit")]
		public System.Nullable<bool> chklogin
		{
			get
			{
				return this._chklogin;
			}
			set
			{
				if ((this._chklogin != value))
				{
					this.OnchkloginChanging(value);
					this.SendPropertyChanging();
					this._chklogin = value;
					this.SendPropertyChanged("chklogin");
					this.OnchkloginChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logincount", DbType="Int")]
		public System.Nullable<int> logincount
		{
			get
			{
				return this._logincount;
			}
			set
			{
				if ((this._logincount != value))
				{
					this.OnlogincountChanging(value);
					this.SendPropertyChanging();
					this._logincount = value;
					this.SendPropertyChanged("logincount");
					this.OnlogincountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logincountenable", DbType="Bit")]
		public System.Nullable<bool> logincountenable
		{
			get
			{
				return this._logincountenable;
			}
			set
			{
				if ((this._logincountenable != value))
				{
					this.OnlogincountenableChanging(value);
					this.SendPropertyChanging();
					this._logincountenable = value;
					this.SendPropertyChanged("logincountenable");
					this.OnlogincountenableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="state_user", Storage="_state", ThisKey="stateID", OtherKey="id", IsForeignKey=true)]
		public state state
		{
			get
			{
				return this._state.Entity;
			}
			set
			{
				state previousValue = this._state.Entity;
				if (((previousValue != value) 
							|| (this._state.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._state.Entity = null;
						previousValue.users.Remove(this);
					}
					this._state.Entity = value;
					if ((value != null))
					{
						value.users.Add(this);
						this._stateID = value.id;
					}
					else
					{
						this._stateID = default(Nullable<int>);
					}
					this.SendPropertyChanged("state");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.streamstatustest")]
	public partial class streamstatustest : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private System.Nullable<int> _streamid;
		
		private string _streamname;
		
		private string _deviceid;
		
		private System.Nullable<System.DateTime> _statustime;
		
		private System.Nullable<bool> _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstreamidChanging(System.Nullable<int> value);
    partial void OnstreamidChanged();
    partial void OnstreamnameChanging(string value);
    partial void OnstreamnameChanged();
    partial void OndeviceidChanging(string value);
    partial void OndeviceidChanged();
    partial void OnstatustimeChanging(System.Nullable<System.DateTime> value);
    partial void OnstatustimeChanged();
    partial void OnstatusChanging(System.Nullable<bool> value);
    partial void OnstatusChanged();
    #endregion
		
		public streamstatustest()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamid", DbType="Int")]
		public System.Nullable<int> streamid
		{
			get
			{
				return this._streamid;
			}
			set
			{
				if ((this._streamid != value))
				{
					this.OnstreamidChanging(value);
					this.SendPropertyChanging();
					this._streamid = value;
					this.SendPropertyChanged("streamid");
					this.OnstreamidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamname", DbType="NVarChar(50)")]
		public string streamname
		{
			get
			{
				return this._streamname;
			}
			set
			{
				if ((this._streamname != value))
				{
					this.OnstreamnameChanging(value);
					this.SendPropertyChanging();
					this._streamname = value;
					this.SendPropertyChanged("streamname");
					this.OnstreamnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_deviceid", DbType="NVarChar(50)")]
		public string deviceid
		{
			get
			{
				return this._deviceid;
			}
			set
			{
				if ((this._deviceid != value))
				{
					this.OndeviceidChanging(value);
					this.SendPropertyChanging();
					this._deviceid = value;
					this.SendPropertyChanged("deviceid");
					this.OndeviceidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_statustime", DbType="DateTime")]
		public System.Nullable<System.DateTime> statustime
		{
			get
			{
				return this._statustime;
			}
			set
			{
				if ((this._statustime != value))
				{
					this.OnstatustimeChanging(value);
					this.SendPropertyChanging();
					this._statustime = value;
					this.SendPropertyChanged("statustime");
					this.OnstatustimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Bit")]
		public System.Nullable<bool> status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.booth")]
	public partial class booth : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private int _streamid;
		
		private System.Nullable<int> _operatorid;
		
		private string _district;
		
		private string _accode;
		
		private string _acname;
		
		private string _PSNum;
		
		private string _location;
		
		private System.Nullable<int> _boothstateid;
		
		private System.Nullable<bool> _isdisplay;
		
		private string _updatedBy;
		
		private System.Nullable<System.DateTime> _updatedDate;
		
		private string _updatedFrom;
		
		private decimal _longitude;
		
		private decimal _latitude;
		
		private string _bkpstreamid;
		
		private System.Nullable<bool> _selbooth;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnstreamidChanging(int value);
    partial void OnstreamidChanged();
    partial void OnoperatoridChanging(System.Nullable<int> value);
    partial void OnoperatoridChanged();
    partial void OndistrictChanging(string value);
    partial void OndistrictChanged();
    partial void OnaccodeChanging(string value);
    partial void OnaccodeChanged();
    partial void OnacnameChanging(string value);
    partial void OnacnameChanged();
    partial void OnPSNumChanging(string value);
    partial void OnPSNumChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OnboothstateidChanging(System.Nullable<int> value);
    partial void OnboothstateidChanged();
    partial void OnisdisplayChanging(System.Nullable<bool> value);
    partial void OnisdisplayChanged();
    partial void OnupdatedByChanging(string value);
    partial void OnupdatedByChanged();
    partial void OnupdatedDateChanging(System.Nullable<System.DateTime> value);
    partial void OnupdatedDateChanged();
    partial void OnupdatedFromChanging(string value);
    partial void OnupdatedFromChanged();
    partial void OnlongitudeChanging(decimal value);
    partial void OnlongitudeChanged();
    partial void OnlatitudeChanging(decimal value);
    partial void OnlatitudeChanged();
    partial void OnbkpstreamidChanging(string value);
    partial void OnbkpstreamidChanged();
    partial void OnselboothChanging(System.Nullable<bool> value);
    partial void OnselboothChanged();
    #endregion
		
		public booth()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_streamid", DbType="Int NOT NULL")]
		public int streamid
		{
			get
			{
				return this._streamid;
			}
			set
			{
				if ((this._streamid != value))
				{
					this.OnstreamidChanging(value);
					this.SendPropertyChanging();
					this._streamid = value;
					this.SendPropertyChanged("streamid");
					this.OnstreamidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_operatorid", DbType="Int")]
		public System.Nullable<int> operatorid
		{
			get
			{
				return this._operatorid;
			}
			set
			{
				if ((this._operatorid != value))
				{
					this.OnoperatoridChanging(value);
					this.SendPropertyChanging();
					this._operatorid = value;
					this.SendPropertyChanged("operatorid");
					this.OnoperatoridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_district", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string district
		{
			get
			{
				return this._district;
			}
			set
			{
				if ((this._district != value))
				{
					this.OndistrictChanging(value);
					this.SendPropertyChanging();
					this._district = value;
					this.SendPropertyChanged("district");
					this.OndistrictChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_accode", DbType="NVarChar(MAX)")]
		public string accode
		{
			get
			{
				return this._accode;
			}
			set
			{
				if ((this._accode != value))
				{
					this.OnaccodeChanging(value);
					this.SendPropertyChanging();
					this._accode = value;
					this.SendPropertyChanged("accode");
					this.OnaccodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_acname", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string acname
		{
			get
			{
				return this._acname;
			}
			set
			{
				if ((this._acname != value))
				{
					this.OnacnameChanging(value);
					this.SendPropertyChanging();
					this._acname = value;
					this.SendPropertyChanged("acname");
					this.OnacnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PSNum", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string PSNum
		{
			get
			{
				return this._PSNum;
			}
			set
			{
				if ((this._PSNum != value))
				{
					this.OnPSNumChanging(value);
					this.SendPropertyChanging();
					this._PSNum = value;
					this.SendPropertyChanged("PSNum");
					this.OnPSNumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_boothstateid", DbType="Int")]
		public System.Nullable<int> boothstateid
		{
			get
			{
				return this._boothstateid;
			}
			set
			{
				if ((this._boothstateid != value))
				{
					this.OnboothstateidChanging(value);
					this.SendPropertyChanging();
					this._boothstateid = value;
					this.SendPropertyChanged("boothstateid");
					this.OnboothstateidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isdisplay", DbType="Bit")]
		public System.Nullable<bool> isdisplay
		{
			get
			{
				return this._isdisplay;
			}
			set
			{
				if ((this._isdisplay != value))
				{
					this.OnisdisplayChanging(value);
					this.SendPropertyChanging();
					this._isdisplay = value;
					this.SendPropertyChanged("isdisplay");
					this.OnisdisplayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedBy", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string updatedBy
		{
			get
			{
				return this._updatedBy;
			}
			set
			{
				if ((this._updatedBy != value))
				{
					this.OnupdatedByChanging(value);
					this.SendPropertyChanging();
					this._updatedBy = value;
					this.SendPropertyChanged("updatedBy");
					this.OnupdatedByChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> updatedDate
		{
			get
			{
				return this._updatedDate;
			}
			set
			{
				if ((this._updatedDate != value))
				{
					this.OnupdatedDateChanging(value);
					this.SendPropertyChanging();
					this._updatedDate = value;
					this.SendPropertyChanged("updatedDate");
					this.OnupdatedDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_updatedFrom", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string updatedFrom
		{
			get
			{
				return this._updatedFrom;
			}
			set
			{
				if ((this._updatedFrom != value))
				{
					this.OnupdatedFromChanging(value);
					this.SendPropertyChanging();
					this._updatedFrom = value;
					this.SendPropertyChanged("updatedFrom");
					this.OnupdatedFromChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_longitude", DbType="Decimal(12,9) NOT NULL")]
		public decimal longitude
		{
			get
			{
				return this._longitude;
			}
			set
			{
				if ((this._longitude != value))
				{
					this.OnlongitudeChanging(value);
					this.SendPropertyChanging();
					this._longitude = value;
					this.SendPropertyChanged("longitude");
					this.OnlongitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_latitude", DbType="Decimal(12,9) NOT NULL")]
		public decimal latitude
		{
			get
			{
				return this._latitude;
			}
			set
			{
				if ((this._latitude != value))
				{
					this.OnlatitudeChanging(value);
					this.SendPropertyChanging();
					this._latitude = value;
					this.SendPropertyChanged("latitude");
					this.OnlatitudeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bkpstreamid", DbType="NVarChar(MAX)")]
		public string bkpstreamid
		{
			get
			{
				return this._bkpstreamid;
			}
			set
			{
				if ((this._bkpstreamid != value))
				{
					this.OnbkpstreamidChanging(value);
					this.SendPropertyChanging();
					this._bkpstreamid = value;
					this.SendPropertyChanged("bkpstreamid");
					this.OnbkpstreamidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_selbooth", DbType="Bit")]
		public System.Nullable<bool> selbooth
		{
			get
			{
				return this._selbooth;
			}
			set
			{
				if ((this._selbooth != value))
				{
					this.OnselboothChanging(value);
					this.SendPropertyChanging();
					this._selbooth = value;
					this.SendPropertyChanged("selbooth");
					this.OnselboothChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
